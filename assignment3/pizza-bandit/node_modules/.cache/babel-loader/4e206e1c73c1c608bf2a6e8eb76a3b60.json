{"ast":null,"code":"import _classCallCheck from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/components/map/pizzaPlaces.js\";\nimport React, { Component } from 'react';\nimport PizzaPlace from './pizzaPlace';\nvar coomponent_name = \"Pizza Places: \";\n\nvar PizzaPlaces =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PizzaPlaces, _Component);\n\n  function PizzaPlaces() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PizzaPlaces);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PizzaPlaces)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      pizza_place_list: []\n    };\n    return _this;\n  }\n\n  _createClass(PizzaPlaces, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //make rest call\n      //this.getPizzaPlacesFromHereAPI();\n      console.log(component_name, \"LatLon properties from parent at PizzaPlaces Component Mount: LAT \".concat(this.props.coords.lat, \" LON: \").concat(this.props.coords.lng));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState, snapshot) {\n      /*so we don't update on every little change, just check to see\n      if lat or lon changed */\n      if (this.props.coords.lat !== prevProps.coords.lat || this.props.coords.lng !== prevProps.coords.lng) {\n        console.log(component_name, \"Previous Lat: \".concat(prevProps.coords.lat, \" and Prevous Lon:\").concat(prevProps.coords.lng));\n        console.log(component_name, \"Current Lat: \".concat(this.props.coords.lat, \" and Current Lon:\").concat(this.props.coords.lng)); //make rest call\n\n        this.getPizzaPlacesFromHereAPI();\n      }\n    }\n  }, {\n    key: \"getPizzaPlacesFromHereAPI\",\n    value: function getPizzaPlacesFromHereAPI() {\n      var _this2 = this;\n\n      var here_api_url = \"https://places.cit.api.here.com/places/v1/autosuggest?\";\n      var here_api_at = \"at=\".concat(this.props.coords.lat, \",\").concat(this.props.coords.lng, \"&\");\n      var here_api_q = \"q=pizza&\";\n      var here_api_app_id = \"app_id=\".concat(process.env.REACT_APP_HERE_API_APP_ID, \"&\");\n      var here_api_app_code = \"app_code=\".concat(process.env.REACT_APP_HERE_API_APP_CODE);\n      console.log(here_api_url + here_api_at + here_api_q + here_api_app_id + here_api_app_code); //the built-in fetch API will make the REST/AJAX call for us: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch    \n\n      fetch(here_api_url + here_api_at + here_api_q + here_api_app_id + here_api_app_code).then(function (response) {\n        //call HERE API and get returned list\n        return response.json();\n      }) //filter down to response that have locations (lat/lon)\n      .then(function (responseAsJson) {\n        //use the JavaScript filter method - https://www.w3schools.com/jsref/jsref_filter.asp\n        var filtered = responseAsJson.results.filter(function (result) {\n          //this checks to see if this record has a position array\n          return result.position;\n        }); //return the filtered results\n\n        return filtered;\n      }) //receive the promise response returned as a JSON object\n      .then(function (filtered) {\n        _this2.setState(function () {\n          return {\n            pizza_place_list: filtered\n          };\n        });\n\n        return filtered;\n      }).then(function (filtered) {\n        var places = _this2.state.pizza_place_list; //get a random pizza place and set the parent state with it            \n\n        if (places.length > 0) {\n          _this2.props.sendRandomPlace(places[Math.floor(Math.random() * places.length)]);\n        }\n\n        _this2.state.pizza_place_list.forEach(function (pizza_place) {\n          var pizzalocation = pizza_place.title + ' ' + pizza_place.vicinity + ' ' + pizza_place.category;\n          console.log(component_name, pizzalocation);\n        });\n      }).catch(function (error) {\n        return console.error(error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var places = this.state.pizza_place_list;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, this.props.title), React.createElement(\"div\", {\n        className: \"card-columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, places.map(function (place) {\n        return React.createElement(PizzaPlace, {\n          key: place.id,\n          placedata: place,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        });\n      })));\n    }\n  }]);\n\n  return PizzaPlaces;\n}(Component);\n\nexport default PizzaPlaces;","map":{"version":3,"sources":["/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/components/map/pizzaPlaces.js"],"names":["React","Component","PizzaPlace","coomponent_name","PizzaPlaces","state","pizza_place_list","console","log","component_name","props","coords","lat","lng","prevProps","prevState","snapshot","getPizzaPlacesFromHereAPI","here_api_url","here_api_at","here_api_q","here_api_app_id","process","env","REACT_APP_HERE_API_APP_ID","here_api_app_code","REACT_APP_HERE_API_APP_CODE","fetch","then","response","json","responseAsJson","filtered","results","filter","result","position","setState","places","length","sendRandomPlace","Math","floor","random","forEach","pizza_place","pizzalocation","title","vicinity","category","catch","error","map","place","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport PizzaPlace from './pizzaPlace';\n\nlet coomponent_name = \"Pizza Places: \"\n\nclass PizzaPlaces extends Component {\n    state = {\n        pizza_place_list: []\n    }\n\n    componentDidMount() {\n        //make rest call\n        //this.getPizzaPlacesFromHereAPI();\n        console.log(component_name, `LatLon properties from parent at PizzaPlaces Component Mount: LAT ${this.props.coords.lat} LON: ${this.props.coords.lng}`);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        /*so we don't update on every little change, just check to see\n        if lat or lon changed */\n        if (this.props.coords.lat !== prevProps.coords.lat || this.props.coords.lng !== prevProps.coords.lng) {\n\n            console.log(component_name, `Previous Lat: ${prevProps.coords.lat} and Prevous Lon:${prevProps.coords.lng}`);\n            console.log(component_name, `Current Lat: ${this.props.coords.lat} and Current Lon:${this.props.coords.lng}`);\n\n            //make rest call\n            this.getPizzaPlacesFromHereAPI();\n        }\n\n    }\n\n    getPizzaPlacesFromHereAPI() {\n\n        const here_api_url = \"https://places.cit.api.here.com/places/v1/autosuggest?\";\n        const here_api_at = `at=${this.props.coords.lat},${this.props.coords.lng}&`;\n        const here_api_q = \"q=pizza&\";\n        const here_api_app_id = `app_id=${process.env.REACT_APP_HERE_API_APP_ID}&`;\n        const here_api_app_code = `app_code=${process.env.REACT_APP_HERE_API_APP_CODE}`;\n\n        console.log(here_api_url + here_api_at + here_api_q + here_api_app_id + here_api_app_code);\n\n        //the built-in fetch API will make the REST/AJAX call for us: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch    \n        fetch(here_api_url + here_api_at + here_api_q + here_api_app_id + here_api_app_code)\n            .then((response) => {\n                //call HERE API and get returned list\n                return response.json();\n            }\n            )\n            //filter down to response that have locations (lat/lon)\n            .then((responseAsJson) => {\n\n                //use the JavaScript filter method - https://www.w3schools.com/jsref/jsref_filter.asp\n                const filtered = responseAsJson.results.filter((result) => {\n                    //this checks to see if this record has a position array\n                    return result.position;\n\n                });\n\n                //return the filtered results\n                return filtered;\n\n            })\n            //receive the promise response returned as a JSON object\n            .then((filtered) => {\n\n                this.setState(() => {\n                    return {\n                        pizza_place_list: filtered,\n                    }\n                }\n                );\n\n                return filtered;\n            })\n            .then((filtered) => {\n\n                const places = this.state.pizza_place_list;\n\n                //get a random pizza place and set the parent state with it            \n                if (places.length > 0) {\n                    this.props.sendRandomPlace(places[Math.floor(Math.random() * places.length)]);\n                }\n\n                this.state.pizza_place_list.forEach((pizza_place) => {\n                    const pizzalocation = pizza_place.title + ' ' +\n                        pizza_place.vicinity + ' ' +\n                        pizza_place.category;\n\n                    console.log(component_name, pizzalocation);\n                }\n                );\n            })\n            .catch(error => console.error(error));\n    }\n\n    render() {\n\n        const places = this.state.pizza_place_list;\n\n        return (\n            <div>\n                <h1>{this.props.title}</h1>\n                <div className=\"card-columns\">\n                    {places.map((place) =>\n                        <PizzaPlace key={place.id}\n                            placedata={place} />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default PizzaPlaces;"]},"metadata":{},"sourceType":"module"}