{"ast":null,"code":"import firebase from 'firebase';\nvar db = firebase.firestore();\n\nvar CompleteOrder = function CompleteOrder(order) {\n  var email = order.email,\n      item = order.item,\n      date = order.date,\n      vendor = order.vendor,\n      price = order.price;\n  console.log(\"DB\", \"\".concat(email, \" # \").concat(item, \" # \").concat(date, \" # \").concat(vendor, \" # \").concat(price, \" #\")); // Add a new document with a generated id.\n\n  db.collection(\"orders\").add({\n    date: date,\n    email: email,\n    item: item,\n    price: price,\n    vendor: vendor\n  }).then(function (docRef) {\n    console.log(\"Document written with ID: \", docRef.id); // order.callback();\n  }).catch(function (error) {\n    console.error(\"Error adding document: \", error);\n  });\n}; // const GetAllOrders = (inquiry) => {\n//     //stuff\n//     let ordersRef = db.collection(\"orders\");\n//     ordersRef.where(\"email\", \"==\", `${inquiry.email}`).get()\n//         .then((querySnapshot) => {\n//             if (!querySnapshot.empty) {\n//                 inquiry.callback(querySnapshot);\n//             }\n//         })\n//         .catch((error) => {\n//             console.error(component_name, error);\n//         });\n// };\n\n\nexport { CompleteOrder };","map":{"version":3,"sources":["/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/Services/DB.js"],"names":["firebase","db","firestore","CompleteOrder","order","email","item","date","vendor","price","console","log","collection","add","then","docRef","id","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MAErBC,KAFqB,GAEgBD,KAFhB,CAErBC,KAFqB;AAAA,MAEdC,IAFc,GAEgBF,KAFhB,CAEdE,IAFc;AAAA,MAERC,IAFQ,GAEgBH,KAFhB,CAERG,IAFQ;AAAA,MAEFC,MAFE,GAEgBJ,KAFhB,CAEFI,MAFE;AAAA,MAEMC,KAFN,GAEgBL,KAFhB,CAEMK,KAFN;AAI7BC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,YAAqBN,KAArB,gBAAgCC,IAAhC,gBAA0CC,IAA1C,gBAAoDC,MAApD,gBAAgEC,KAAhE,SAJ6B,CAM7B;;AACAR,EAAAA,EAAE,CAACW,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AACxBN,IAAAA,IAAI,EAAEA,IADkB;AAExBF,IAAAA,KAAK,EAAEA,KAFiB;AAGxBC,IAAAA,IAAI,EAAEA,IAHkB;AAIxBG,IAAAA,KAAK,EAAEA,KAJiB;AAKxBD,IAAAA,MAAM,EAAEA;AALgB,GAA5B,EAOKM,IAPL,CAOU,UAAUC,MAAV,EAAkB;AACpBL,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CI,MAAM,CAACC,EAAjD,EADoB,CAGpB;AACH,GAXL,EAYKC,KAZL,CAYW,UAAUC,KAAV,EAAiB;AACpBR,IAAAA,OAAO,CAACQ,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH,GAdL;AAgBH,CAvBD,C,CAyBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,SAASf,aAAT","sourcesContent":["import firebase from 'firebase';\n\nconst db = firebase.firestore();\n\nconst CompleteOrder = (order) => {\n\n    const { email, item, date, vendor, price } = order;\n\n    console.log(\"DB\", `${email} # ${item} # ${date} # ${vendor} # ${price} #`)\n\n    // Add a new document with a generated id.\n    db.collection(\"orders\").add({\n        date: date,\n        email: email,\n        item: item,\n        price: price,\n        vendor: vendor\n    })\n        .then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n\n            // order.callback();\n        })\n        .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n        });\n\n};\n\n// const GetAllOrders = (inquiry) => {\n\n//     //stuff\n//     let ordersRef = db.collection(\"orders\");\n\n//     ordersRef.where(\"email\", \"==\", `${inquiry.email}`).get()\n//         .then((querySnapshot) => {\n//             if (!querySnapshot.empty) {\n//                 inquiry.callback(querySnapshot);\n//             }\n//         })\n//         .catch((error) => {\n//             console.error(component_name, error);\n//         });\n\n// };\n\nexport { CompleteOrder };"]},"metadata":{},"sourceType":"module"}