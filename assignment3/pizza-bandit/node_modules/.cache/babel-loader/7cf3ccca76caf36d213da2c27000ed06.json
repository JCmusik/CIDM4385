{"ast":null,"code":"import firebase from 'firebase';\nvar db = firebase.firestore();\n\nvar CompleteOrder = function CompleteOrder(order) {\n  var email = order.email,\n      item = order.item,\n      date = order.date,\n      vendor = order.vendor,\n      price = order.price;\n  console.log(component_name, \"\".concat(email, \" # \").concat(item, \" # \").concat(date, \" # \").concat(vendor, \" # \").concat(price, \" #\")); // Add a new document with a generated id.\n\n  db.collection(\"orders\").add({\n    date: date,\n    email: email,\n    item: item,\n    price: price,\n    vendor: vendor\n  }).then(function (docRef) {\n    console.log(\"Document written with ID: \", docRef.id);\n    orderInquiry.callback();\n  }).catch(function (error) {\n    console.error(\"Error adding document: \", error);\n  });\n};\n\nvar GetAllOrders = function GetAllOrders(inquiry) {\n  //stuff\n  var ordersRef = db.collection(\"orders\");\n  ordersRef.where(\"email\", \"==\", \"\".concat(inquiry.email)).get().then(function (querySnapshot) {\n    if (!querySnapshot.empty) {\n      inquiry.callback(querySnapshot);\n    }\n  }).catch(function (error) {\n    console.error(component_name, error);\n  });\n};\n\nexport { AddOrder, GetAllOrders };","map":{"version":3,"sources":["/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/Services/DB.js"],"names":["firebase","db","firestore","CompleteOrder","order","email","item","date","vendor","price","console","log","component_name","collection","add","then","docRef","id","orderInquiry","callback","catch","error","GetAllOrders","inquiry","ordersRef","where","get","querySnapshot","empty","AddOrder"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,MAErBC,KAFqB,GAEgBD,KAFhB,CAErBC,KAFqB;AAAA,MAEdC,IAFc,GAEgBF,KAFhB,CAEdE,IAFc;AAAA,MAERC,IAFQ,GAEgBH,KAFhB,CAERG,IAFQ;AAAA,MAEFC,MAFE,GAEgBJ,KAFhB,CAEFI,MAFE;AAAA,MAEMC,KAFN,GAEgBL,KAFhB,CAEMK,KAFN;AAI7BC,EAAAA,OAAO,CAACC,GAAR,CAAYC,cAAZ,YAA+BP,KAA/B,gBAA0CC,IAA1C,gBAAoDC,IAApD,gBAA8DC,MAA9D,gBAA0EC,KAA1E,SAJ6B,CAM7B;;AACAR,EAAAA,EAAE,CAACY,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4B;AACxBP,IAAAA,IAAI,EAAEA,IADkB;AAExBF,IAAAA,KAAK,EAAEA,KAFiB;AAGxBC,IAAAA,IAAI,EAAEA,IAHkB;AAIxBG,IAAAA,KAAK,EAAEA,KAJiB;AAKxBD,IAAAA,MAAM,EAAEA;AALgB,GAA5B,EAOKO,IAPL,CAOU,UAAUC,MAAV,EAAkB;AACpBN,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CK,MAAM,CAACC,EAAjD;AACAC,IAAAA,YAAY,CAACC,QAAb;AACH,GAVL,EAWKC,KAXL,CAWW,UAAUC,KAAV,EAAiB;AACpBX,IAAAA,OAAO,CAACW,KAAR,CAAc,yBAAd,EAAyCA,KAAzC;AACH,GAbL;AAeH,CAtBD;;AAwBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAE9B;AACA,MAAIC,SAAS,GAAGvB,EAAE,CAACY,UAAH,CAAc,QAAd,CAAhB;AAEAW,EAAAA,SAAS,CAACC,KAAV,CAAgB,OAAhB,EAAyB,IAAzB,YAAkCF,OAAO,CAAClB,KAA1C,GAAmDqB,GAAnD,GACKX,IADL,CACU,UAACY,aAAD,EAAmB;AACrB,QAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AACtBL,MAAAA,OAAO,CAACJ,QAAR,CAAiBQ,aAAjB;AACH;AACJ,GALL,EAMKP,KANL,CAMW,UAACC,KAAD,EAAW;AACdX,IAAAA,OAAO,CAACW,KAAR,CAAcT,cAAd,EAA8BS,KAA9B;AACH,GARL;AAUH,CAfD;;AAiBA,SAASQ,QAAT,EAAmBP,YAAnB","sourcesContent":["import firebase from 'firebase';\n\nconst db = firebase.firestore();\n\nconst CompleteOrder = (order) => {\n\n    const { email, item, date, vendor, price } = order;\n\n    console.log(component_name, `${email} # ${item} # ${date} # ${vendor} # ${price} #`)\n\n    // Add a new document with a generated id.\n    db.collection(\"orders\").add({\n        date: date,\n        email: email,\n        item: item,\n        price: price,\n        vendor: vendor\n    })\n        .then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n            orderInquiry.callback();\n        })\n        .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n        });\n\n};\n\nconst GetAllOrders = (inquiry) => {\n\n    //stuff\n    let ordersRef = db.collection(\"orders\");\n\n    ordersRef.where(\"email\", \"==\", `${inquiry.email}`).get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                inquiry.callback(querySnapshot);\n            }\n        })\n        .catch((error) => {\n            console.error(component_name, error);\n        });\n\n};\n\nexport { AddOrder, GetAllOrders };"]},"metadata":{},"sourceType":"module"}