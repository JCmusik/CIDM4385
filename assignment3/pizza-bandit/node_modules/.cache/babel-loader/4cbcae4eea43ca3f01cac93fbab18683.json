{"ast":null,"code":"import firebase from 'firebase';\nvar db = firebase.firestore();\nvar component_name = \"Services/DB\";\n\nvar AddOrder = function AddOrder(orderInquiry) {\n  console.log(component_name, \"\".concat(email, \" # \").concat(pizza, \" # \").concat(date, \" # \").concat(place, \" # \").concat(price, \" #\")); // Add a new document with a generated id.\n  // db.collection(\"orders\").add({\n  //     date: date,\n  //     email: email,\n  //     item: pizza,\n  //     price: price,\n  //     vendor: place,\n  // })\n  //     .then(function (docRef) {\n  //         console.log(\"Document written with ID: \", docRef.id);\n  //         orderInquiry.callback();\n  //     })\n  //     .catch(function (error) {\n  //         console.error(\"Error adding document: \", error);\n  //     });\n};\n\nvar GetAllOrders = function GetAllOrders(inquiry) {\n  //stuff\n  var ordersRef = db.collection(\"orders\");\n  ordersRef.where(\"email\", \"==\", \"\".concat(inquiry.email)).get().then(function (querySnapshot) {\n    if (!querySnapshot.empty) {\n      inquiry.callback(querySnapshot);\n    }\n  }).catch(function (error) {\n    console.error(component_name, error);\n  });\n};\n\nexport { AddOrder, GetAllOrders };","map":{"version":3,"sources":["/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/Services/DB.js"],"names":["firebase","db","firestore","component_name","AddOrder","orderInquiry","console","log","email","pizza","date","place","price","GetAllOrders","inquiry","ordersRef","collection","where","get","then","querySnapshot","empty","callback","catch","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,EAAE,GAAGD,QAAQ,CAACE,SAAT,EAAX;AAEA,IAAMC,cAAc,GAAG,aAAvB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,YAAD,EAAkB;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,cAAZ,YAA+BK,KAA/B,gBAA0CC,KAA1C,gBAAqDC,IAArD,gBAA+DC,KAA/D,gBAA0EC,KAA1E,SAF+B,CAI/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH,CApBD;;AAsBA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAE9B;AACA,MAAIC,SAAS,GAAGd,EAAE,CAACe,UAAH,CAAc,QAAd,CAAhB;AAEAD,EAAAA,SAAS,CAACE,KAAV,CAAgB,OAAhB,EAAyB,IAAzB,YAAkCH,OAAO,CAACN,KAA1C,GAAmDU,GAAnD,GACKC,IADL,CACU,UAACC,aAAD,EAAmB;AACrB,QAAI,CAACA,aAAa,CAACC,KAAnB,EAA0B;AACtBP,MAAAA,OAAO,CAACQ,QAAR,CAAiBF,aAAjB;AACH;AACJ,GALL,EAMKG,KANL,CAMW,UAACC,KAAD,EAAW;AACdlB,IAAAA,OAAO,CAACkB,KAAR,CAAcrB,cAAd,EAA8BqB,KAA9B;AACH,GARL;AAUH,CAfD;;AAiBA,SAASpB,QAAT,EAAmBS,YAAnB","sourcesContent":["import firebase from 'firebase';\n\nconst db = firebase.firestore();\n\nconst component_name = \"Services/DB\";\n\nconst AddOrder = (orderInquiry) => {\n\n    console.log(component_name, `${email} # ${pizza} # ${date} # ${place} # ${price} #`)\n\n    // Add a new document with a generated id.\n    // db.collection(\"orders\").add({\n    //     date: date,\n    //     email: email,\n    //     item: pizza,\n    //     price: price,\n    //     vendor: place,\n    // })\n    //     .then(function (docRef) {\n    //         console.log(\"Document written with ID: \", docRef.id);\n    //         orderInquiry.callback();\n    //     })\n    //     .catch(function (error) {\n    //         console.error(\"Error adding document: \", error);\n    //     });\n\n};\n\nconst GetAllOrders = (inquiry) => {\n\n    //stuff\n    let ordersRef = db.collection(\"orders\");\n\n    ordersRef.where(\"email\", \"==\", `${inquiry.email}`).get()\n        .then((querySnapshot) => {\n            if (!querySnapshot.empty) {\n                inquiry.callback(querySnapshot);\n            }\n        })\n        .catch((error) => {\n            console.error(component_name, error);\n        });\n\n};\n\nexport { AddOrder, GetAllOrders };"]},"metadata":{},"sourceType":"module"}