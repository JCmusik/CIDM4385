{"ast":null,"code":"import _classCallCheck from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/components/map/map.js\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport PizzaPlaces from './pizzaPlaces';\nimport { Redirect } from 'react-router-dom';\nvar Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_MAPBOX_API_ACCESS_TOKEN\n});\n\nvar Mapbox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Mapbox, _Component);\n\n  function Mapbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mapbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mapbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      mapstyle: 'light',\n      geolocerror: ''\n    };\n    return _this;\n  }\n\n  _createClass(Mapbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setCurrentLocation();\n    }\n  }, {\n    key: \"setCurrentLocation\",\n    value: function setCurrentLocation() {\n      var _this2 = this;\n\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(function (position) {\n          var lat = position.coords.latitude;\n          var lng = position.coords.longitude;\n\n          _this2.props.setCoords(lat, lng);\n        });\n      } else {\n        var geolocerror = '[blocked] Access to geolocation was blocked over insecure connection to http://localhost:3000';\n        this.setState({\n          geolocerror: geolocerror\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          geolocerror = _this$state.geolocerror,\n          mapstyle = _this$state.mapstyle;\n      var _this$props = this.props,\n          lat = _this$props.lat,\n          lng = _this$props.lng,\n          sendRandomPlace = _this$props.sendRandomPlace,\n          selectedPlace = _this$props.selectedPlace,\n          auth = _this$props.auth;\n\n      if (!auth) {\n        return React.createElement(Redirect, {\n          to: \"/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      ;\n      return React.createElement(\"div\", {\n        className: \"container map\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"bg-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, geolocerror), React.createElement(Map, {\n        style: \"mapbox://styles/mapbox/\".concat(mapstyle, \"-v9\"),\n        center: [lng, lat],\n        containerStyle: {\n          height: \"200px\",\n          width: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"marker\",\n        layout: {\n          \"icon-image\": \"marker-15\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Feature, {\n        coordinates: [lng, lat],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }))), React.createElement(PizzaPlaces, {\n        lat: lat,\n        lng: lng,\n        sendRandomPlace: sendRandomPlace,\n        selectedPlace: selectedPlace,\n        auth: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Mapbox;\n}(Component);\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/johncunningham/Desktop/Spring 2019/CIDM4385-Mobile-App-Dev/CIDM4385/assignment3/pizza-bandit/src/components/map/map.js"],"names":["React","Component","ReactMapboxGl","Layer","Feature","PizzaPlaces","Redirect","Map","accessToken","process","env","REACT_APP_MAPBOX_API_ACCESS_TOKEN","Mapbox","state","mapstyle","geolocerror","setCurrentLocation","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lng","longitude","props","setCoords","setState","sendRandomPlace","selectedPlace","auth","height","width"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,IAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,IAAMC,GAAG,GAAGL,aAAa,CAAC;AACtBM,EAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC;AADH,CAAD,CAAzB;;IAIMC,M;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,OADN;AAEJC,MAAAA,WAAW,EAAE;AAFT,K;;;;;;wCAKY;AAChB,WAAKC,kBAAL;AACH;;;yCAEoB;AAAA;;AACjB,UAAIC,SAAS,CAACC,WAAd,EAA2B;AACvBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAI;AACjD,cAAIC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,QAA1B;AACA,cAAIC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,SAA1B;;AACA,UAAA,MAAI,CAACC,KAAL,CAAWC,SAAX,CAAqBN,GAArB,EAA0BG,GAA1B;AACH,SAJD;AAKH,OAND,MAMO;AACH,YAAMT,WAAW,GAAG,+FAApB;AACA,aAAKa,QAAL,CAAc;AAAEb,UAAAA,WAAW,EAAXA;AAAF,SAAd;AACH;AACJ;;;6BACQ;AAAA,wBAC6B,KAAKF,KADlC;AAAA,UACGE,WADH,eACGA,WADH;AAAA,UACgBD,QADhB,eACgBA,QADhB;AAAA,wBAEsD,KAAKY,KAF3D;AAAA,UAEGL,GAFH,eAEGA,GAFH;AAAA,UAEQG,GAFR,eAEQA,GAFR;AAAA,UAEaK,eAFb,eAEaA,eAFb;AAAA,UAE8BC,aAF9B,eAE8BA,aAF9B;AAAA,UAE6CC,IAF7C,eAE6CA,IAF7C;;AAGL,UAAI,CAACA,IAAL,EAAW;AAAE,eAAO,oBAAC,QAAD;AAAU,UAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAA4B;;AAAA;AACzC,aACI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BhB,WAA1B,CADJ,EAEI,oBAAC,GAAD;AACI,QAAA,KAAK,mCAA4BD,QAA5B,QADT;AAEI,QAAA,MAAM,EAAE,CAACU,GAAD,EAAMH,GAAN,CAFZ;AAGI,QAAA,cAAc,EAAE;AACZW,UAAAA,MAAM,EAAE,OADI;AAEZC,UAAAA,KAAK,EAAE;AAFK,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AACI,QAAA,EAAE,EAAC,QADP;AAEI,QAAA,MAAM,EAAE;AAAE,wBAAc;AAAhB,SAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAE,CAACT,GAAD,EAAMH,GAAN,CAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CAPJ,CAFJ,EAgBI,oBAAC,WAAD;AACI,QAAA,GAAG,EAAEA,GADT;AAEI,QAAA,GAAG,EAAEG,GAFT;AAGI,QAAA,eAAe,EAAEK,eAHrB;AAII,QAAA,aAAa,EAAEC,aAJnB;AAKI,QAAA,IAAI,EAAEC,IALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ;AA0BH;;;;EApDgB9B,S;;AAuDrB,eAAeW,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from 'react-mapbox-gl';\nimport PizzaPlaces from './pizzaPlaces';\nimport { Redirect } from 'react-router-dom';\n\nconst Map = ReactMapboxGl({\n    accessToken: process.env.REACT_APP_MAPBOX_API_ACCESS_TOKEN\n});\n\nclass Mapbox extends Component {\n    state = {\n        mapstyle: 'light',\n        geolocerror: ''\n    }\n\n    componentDidMount() {\n        this.setCurrentLocation();\n    }\n\n    setCurrentLocation() {\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(position => {\n                let lat = position.coords.latitude;\n                let lng = position.coords.longitude;\n                this.props.setCoords(lat, lng);\n            });\n        } else {\n            const geolocerror = '[blocked] Access to geolocation was blocked over insecure connection to http://localhost:3000';\n            this.setState({ geolocerror });\n        }\n    }\n    render() {\n        const { geolocerror, mapstyle } = this.state;\n        const { lat, lng, sendRandomPlace, selectedPlace, auth } = this.props;\n        if (!auth) { return <Redirect to='/' /> };\n        return (\n            <div className=\"container map\" >\n                <p className=\"bg-danger\">{geolocerror}</p>\n                <Map\n                    style={`mapbox://styles/mapbox/${mapstyle}-v9`}\n                    center={[lng, lat]}\n                    containerStyle={{\n                        height: \"200px\",\n                        width: \"100%\"\n                    }}>\n                    <Layer type=\"symbol\"\n                        id=\"marker\"\n                        layout={{ \"icon-image\": \"marker-15\" }}\n                    >\n                        <Feature coordinates={[lng, lat]} />\n                    </Layer>\n                </Map>\n                <PizzaPlaces\n                    lat={lat}\n                    lng={lng}\n                    sendRandomPlace={sendRandomPlace}\n                    selectedPlace={selectedPlace}\n                    auth={auth}\n                />\n            </div >\n        )\n    }\n}\n\nexport default Mapbox;"]},"metadata":{},"sourceType":"module"}